---
# tasks file for docker-syncthing

- name: Install python-pip
  apt:
      name: python-pip
      state: present
- name: Install required python libraries
  pip:
    name: "{{ item }}"
  with_items:
    - docker-py
    - lxml

# - name: Stop Syncthing Container
#   docker_container:
#     name: syncthing
#     state: stopped

# - name: Create config paths
#   file:
#     path: "/docker/containers/syncthing/{{ item }}"
#     state: directory
#     mode: 0775
#     owner: it
#     group: it
#     recurse: yes
#   with_items:
#     - config

- name: Create data paths
  file:
    path: "/docker/containers/syncthing/{{ item }}"
    state: directory
    mode: 0775
    owner: it
    group: it
    recurse: yes
  with_items:
    - data
    - data/sync
    - data/public_profile

# - name: Remove Old Paths
#   file:
#     path: "/docker/containers/syncthing/{{ item }}"
#     state: absent
#   with_items:
#     - sync
#     - public_profile
#     - tapet

# Run this to reset ids
# - name: Remove config.xml file
#   file:
#     path: "/docker/containers/syncthing/config/{{ item }}"
#     state: absent
#   with_items:
#     - config.xml
#     - key.pem
#     - cert.pem

- name: Start syncthing container
  docker_container:
    name: syncthing
    # image: linuxserver/syncthing
    image: syncthing/syncthing
    state: started
    restart_policy: always
    recreate: yes
    pull: true
    exposed_ports:
        - 22000
        - 8384
        - 21027/udp
    published_ports:
        - 22000:22000
        - 21027:21027/udp
        - 8384:8384
    volumes:
        - '/docker/containers/syncthing/data/sync:/var/syncthing'
        - '/docker/containers/syncthing/data/public_profile:/mnt/public_profile'
        - '/docker/containers/syncthing/config:/var/syncthing/config'
    env:
        PGID: 1000
        PUID: 1000
        TZ: America/Chicago
        STNOUPGRADE: true
    # network_mode: host


  # when: ansible_distribution == "Ubuntu"

# - name: Read attribute value
#   xml:
#     path: /docker/containers/syncthing/config/config.xml
#     xpath: /configuration/device/@id
#     content: attribute
#     attribute: id
#   register: device_id

# - name: Show attribute value
#   debug:
#     var: device_id


- name: Waiting for Syncthing to start
  pause:
    seconds: 10

- name: Read attribute value
  xml:
    path: /docker/containers/syncthing/config/config.xml
    xpath: /configuration/gui/apikey
    content: text
  register: api_key

- name: Show api key value
  debug:
    var: api_key.matches[0].apikey

- name: Get configuration
  uri:
    url: http://localhost:8384/rest/system/config
    method: GET
    body_format: json
    headers:
      X-API-KEY: "{{ api_key.matches[0].apikey }}"
    return_contents: yes
  register: rest_config


- name: Show configuration
  debug:
    var: rest_config.x_syncthing_id

# - name: Update Configuration
#   template:
#     src: config.xml.j2
#     dest: /docker/containers/syncthing/config/config.xml

- name: Open Ports for syncthing UFW
  ufw:
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
    rule: allow
  with_items:
    - "{{ docker_ports }}"
  notify: Restart UFW

- name: Restart Syncthing
  uri:
    url: http://127.0.0.1:8384/rest/system/restart
    method: POST
    body_format: json
    headers:
      X-API-KEY: "{{ api_key.matches[0].apikey }}"
    return_contents: yes
  register: rest_config